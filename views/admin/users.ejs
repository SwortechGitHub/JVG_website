<form id="contentForm" action="/a01d92m83i74n65/submit-user" method="post" style="display: flex; flex-direction: column;">
    <label for="username">Lietotājvārds:</label>
    <input type="text" name="username" id="username" required>

    <label for="password">Parole:</label>
    <input type="password" name="password" id="password" required>

    <label for="email">E-pasts:</label>
    <input type="email" name="email" id="email" required>

    <label for="role">Loma:</label>
    <select name="role" id="role">
        <option value="admin">Admins</option>
        <option value="klase">Klase</option>
        <option value="int_izgl_sk">Interešu izglītības skolotājs</option>
    </select>

    <label for="editablePageId">Mainīt lapu saturu Page ID (Interešu izglītas skolotājam):</label>
    <input type="text" name="editablePageId" id="editablePageId">

    <button type="submit" id="submitBtn" onclick="submitForm()" class="secondary">Pievienot</button>
</form>
<script>
    const submitForm = (event) => {
        event.preventDefault();

        const form = document.getElementById('contentForm');
        const formData = new FormData(form);
        const searchParams = new URLSearchParams(formData);

        fetch(form.action, {
            method: 'POST',
            body: searchParams,
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            }
        })
        .then(response => {
            if (response.ok) {
                form.reset();
                document.getElementById('submitBtn').innerText = "Pievienot";
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                alert(data.message);
            } else {
                alert('Error: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while submitting the form.');
        });
    };
</script>
<content style="min-width: 65vw;">
    <% Object.keys(groupedUsers).forEach(role => { %>
        <details>
            <summary role="button" class="outline"><%= role %></summary>
            <table>
                <thead>
                    <tr>
                        <th>Lietotājvārds</th>
                        <th>E-pasts</th>
                        <th>Loma</th>
                        <th>Lapa Page ID</th>
                    </tr>
                </thead>
                <tbody>
                    <% groupedUsers[role].forEach(user => { %>
                        <tr id="<%= user._id %>">
                            <td><%= user.username %></td>
                            <td><%= user.email %></td>
                            <td><%= user.role %></td>
                            <td><%= user.editablePageId %></td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </details>
    <% }) %>
</content>